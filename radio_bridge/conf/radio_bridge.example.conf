[main]
# Path to the logging config file
logging_config = {rootdir}/conf/logging.conf
# True to enable dev mode where some abuse prevention and other limits are not enforced.
dev_mode = True
# True to enable emulator mode in which DTMF sequences are read from the keyboard.
emulator_mode = True

[rx]
# Record time in seconds we use for audio files on which we then perform DTMF decoding algorithm.
# Each recording should be long enough to capture a single DTMF character.
# In most cases you won't need to change this value since with 0.2 we achieve very high decoding
# accuracy with the current algorithm.
record_time = 0.2

[tx]
# Callsign to say before each message or a path to audio file to play ending wither either .mp3
# or .wav extension.
callsign = SIERRA FIVE TWO
# callsign = /tmp/callsign.mp3
# Valid values: vox,gpio
mode = vox
# Which RPi GPIO pin to use when tx.mode = gpio
gpio_pin = 10

[audio]
# Should match native input (microphone) / sound card sample rate
#input_device_index = 0
input_device_index = 11
#sample_rate = 44100
sample_rate = 48000

[tts]
# Which TTS implementation to use. Valid values: gtts,espeak
implementation = espeak
# True to cache synthesized files to allow faster playbacks of the text which was already
# synthesized in the past.
enable_cache = true
# Directory where generates tts audio files are cached so they can be reused if the text itself
# hasn't changed
cache_directory = /tmp/tts-audio-cache

[dtmf]
implementation = fft

[plugins]
# Which plugin execution model to use. Valid values:
# - native -> Run plugins inside the main server thread.
# - process -> Run plugins in an isolated sub process. This allows us to kill the plugin if it
# misbehaves or execution takes longer than max_run_time seconds
#executor = process
executor = process
# Maximum allowed run time for plugin run() method. If it takes longer than that, the plugin
# will be automatically killed and TX disabled. This value can be overriden on per plugin basis.
max_run_time = 120
# File where one time pin codes which are generated on server startup and can be used for
# invoking admin commands are stored on disk. Keep in mind that those values are stored in
# plain text.
admin_otps_file_path = /tmp/radio-bridge-admin-otps.txt

#
# Plugin specific configuration is located below
#

# The following configuration options are common to all the plugins:
# dtmf_sequence - Override which DTMF sequence is used to trigger invocation of that plugin.
# minimum_run_interval - How much time (in seconds) must pass between subsequent invocations of this
# plugin (to prevent abuse, spamming, etc.)

[plugin:help]
dtmf_sequence = 12
# How much time must pass between two executions of this command. If user requests it before
# this time has passed, request will be denied.
minimum_run_interval = 30

[plugin:clear_sequence]
enable = True
dtmf_sequence = *D*
minimum_run_interval = 30

[plugin:current_time]
dtmf_sequence = 21
minimum_run_interval = 10
local_timezone = Europe/Ljubljana

[plugin:local_weather]
dtmf_sequence = 34
minimum_run_interval = 120
weather_station_id = home

[plugin:location_weather]
dtmf_sequence = 35??
minimum_run_interval = 120

[plugin:repeater_infox]

[plugin:record_audio]
# Recording will be organized into files with a duration (in seconds) specified here
data_dir = /tmp/radio-bridge-recordings/
record_duration = 10
input_device_index = 11
channels = 1
sample_rate = 48000

[plugin:cron]
#say_hello_world_every_120_seconds = interval;seconds=30;text;Current time is {time_utc} UTC.
#say_text_as_morse_every_30_seconds = interval;seconds=30;text_to_morse;sos
#say_morse_code_every_40_seconds = interval;seconds=40;morse;... --- ...
#play_callsign_every_5_seconds = interval;seconds=5;file;/home/kami/w/pi-ham-radio/radio_bridge/audio_files/callsign.mp3
#play_callsign_every_5_minutes = cron;*/5 * * * *;file;/home/kami/w/pi-ham-radio/radio_bridge/audio_files/callsign.mp3
